import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from statsmodels.tsa.arima.model import ARIMA
import warnings

warnings.filterwarnings("ignore")  # Suppress warnings for cleaner output

# Generate sample sales dataset
dates = pd.date_range(start="2020-01-01", periods=36, freq="M")
sales = np.random.randint(1000, 5000, size=len(dates))
data = pd.DataFrame({"date": dates, "sales": sales})
data.to_csv("sales_data.csv", index=False)

# Load dataset
data = pd.read_csv("sales_data.csv", parse_dates=["date"], index_col="date")

# Basic exploration
print(data.info())
print(data.describe())

# Visualizing sales trend
plt.figure(figsize=(12, 6))
sns.lineplot(data=data, x=data.index, y="sales", marker="o")
plt.title("Sales Over Time")
plt.xlabel("Date")
plt.ylabel("Sales")
plt.grid()
plt.show()

# ARIMA Model for forecasting
model = ARIMA(data["sales"], order=(5,1,0))  # Example order, tune as needed
model_fit = model.fit()
print(model_fit.summary())

# Forecasting with ARIMA
forecast = model_fit.forecast(steps=12)
plt.figure(figsize=(12, 6))
plt.plot(data.index, data["sales"], label="Actual Sales")
plt.plot(pd.date_range(data.index[-1], periods=13, freq="M")[1:], forecast, label="ARIMA Forecast", linestyle="dashed")
plt.title("Sales Forecasting (ARIMA)")
plt.legend()
plt.show()

print("Prophet module not installed. Skipping Prophet-based forecasting.")
