import tkinter as tk
import random
import os

# PMP Flashcard Data
flashcards = [
    ("What is the primary role of a Project Manager?", "To lead and manage the project team to achieve project objectives."),
    ("What is the purpose of a Work Breakdown Structure (WBS)?", "To break down project work into smaller, manageable sections."),
    ("What are the three constraints in project management?", "Scope, Time, and Cost."),
    ("What does RACI stand for?", "Responsible, Accountable, Consulted, and Informed."),
    ("What is a risk register?", "A document that contains identified risks, their analysis, and response plans."),
    ("What is the Critical Path Method (CPM)?", "A technique to determine the longest path in a project schedule."),
    ("What is Earned Value Management (EVM)?", "A method to measure project performance and progress using scope, schedule, and cost."),
    ("What is the difference between qualitative and quantitative risk analysis?", "Qualitative assesses probability and impact; Quantitative assigns numerical values to risks."),
    ("What is a stakeholder register?", "A document listing all stakeholders, their influence, and their requirements."),
    ("What is the purpose of a Change Control Board (CCB)?", "To review and approve/reject project changes."),
    ("What is Rolling Wave Planning?", "An iterative planning technique where near-term work is planned in detail and future work at a high level."),
    ("What is the difference between a project and a program?", "A project is a temporary effort; a program is a collection of related projects."),
    ("What is the definition of a stakeholder?", "An individual, group, or organization affected by project decisions and outcomes."),
    ("What is a Sprint in Agile?", "A time-boxed iteration in which a defined amount of work is completed."),
    ("What is the purpose of a retrospective in Agile?", "To reflect on the past sprint and identify improvements."),
    ("What is a burndown chart?", "A graphical representation of work remaining in a sprint or project."),
    ("What is scope creep?", "The uncontrolled expansion of project scope without approval."),
    ("What are the five process groups in project management?", "Initiating, Planning, Executing, Monitoring & Controlling, and Closing."),
    ("What is the purpose of lessons learned documentation?", "To capture insights for future projects and improve processes."),
    ("What is a project charter?", "A document that formally authorizes a project and provides initial requirements."),
]

current_card = {}

def next_card():
    global current_card
    current_card = random.choice(flashcards)
    question_label.config(text=current_card[0])
    answer_label.config(text="")
    if os.path.exists(image_path):
        image_label.config(image=card_image)
    else:
        image_label.config(text="[No Image Available]", fg="red", font=("Arial", 14, "bold"))

def show_answer():
    answer_label.config(text=current_card[1])

# Setup UI
root = tk.Tk()
root.title("PMP Flashcard Study Tool")
root.geometry("600x400")
root.config(bg="#222222")  # Darker background

# Load image with error handling
image_path = "flashcard.png"
if os.path.exists(image_path):
    card_image = tk.PhotoImage(file=image_path)
else:
    card_image = tk.PhotoImage(width=400, height=200)  # Empty placeholder

image_label = tk.Label(root, image=card_image, bg="#222222")
image_label.pack(pady=10)

# Flashcard question label
question_label = tk.Label(root, text="", font=("Arial", 16, "bold"), wraplength=500, bg="#222222", fg="white")
question_label.pack(pady=10)

# Answer label
answer_label = tk.Label(root, text="", font=("Arial", 14), wraplength=500, fg="lightgreen", bg="#222222")
answer_label.pack(pady=10)

# Buttons
button_frame = tk.Frame(root, bg="#222222")
button_frame.pack(pady=20)

show_answer_button = tk.Button(button_frame, text="Show Answer", command=show_answer, font=("Arial", 12), bg="#4CAF50", fg="white", padx=10, pady=5)
show_answer_button.grid(row=0, column=0, padx=10)

next_card_button = tk.Button(button_frame, text="Next Question", command=next_card, font=("Arial", 12), bg="#008CBA", fg="white", padx=10, pady=5)
next_card_button.grid(row=0, column=1, padx=10)

# Initialize first card
next_card()

root.mainloop()
